@using VideoStreamingService.Data.ViewModels;
@model SubscriptionsVM

@{
    ViewData["Title"] = "Подписки";
}

<div class="d-flex flex-column align-items-center mt-2">
	<div class="d-flex flex-column align-items-stretch">
		@if (Model.Channels.Count == 0)
		{
			<h1 class="display-4 text-center">У вас пока нет подписок</h1>
			<p class="text-center">Чтобы увидеть подписки, нужно сначала подписаться</p>
		}
		@foreach (var c in Model.Channels)
		{
			<div id="container_@c.Id" class="rounded mb-2">
				<div class="d-flex align-items-center">
					<a href="~/@c.Url">
						<img src="data:image/jpeg;base64,@c.Image" class="rounded-circle p-3 p-md-0 my-0 my-md-3 me-2 me-md-4"
							 style="aspect-ratio: 1/1;max-height:96px;max-width:96px">
					</a>
					<div>
						<a class="h4 text-decoration-none crop-text-1 text-reset" href="~/@c.Url">@c.Name</a>
						<button channelUrl="@c.Url" subed="@c.Subed.ToString().ToLower()" class="btn btn-success mb-2 sub-btn" style="width:190px;">Подписаться</button>
						<p id="subCount_@c.Url" class="mb-2" title="@c.LongSubsString()">@c.SubsString()</p>
					</div>
				</div>
			</div>
		}
	</div>
</div>

<script src="~/js/subscription.js"></script>