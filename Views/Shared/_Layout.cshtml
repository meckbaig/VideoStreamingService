@using Microsoft.AspNetCore.Mvc.TagHelpers
@using VideoStreamingService.Data.ViewModels
@inject IHttpContextAccessor Accessor
@{
    string page = $"{Accessor.HttpContext.Request.Scheme}://{Accessor.HttpContext.Request.Host}{Accessor.HttpContext.Request.Path}{Accessor.HttpContext.Request.QueryString}";
    if (!page.Contains("/Video/Upload")
        && !page.Contains("/Video/Edit")
        && !page.Contains("/Developer/Configuration")
        && !page.Contains("/Payment/")
        && !page.Contains("/User/"))
        Accessor.HttpContext.Session.Set<string>("LastPage", page);
}
<!DOCTYPE html>
<html lang="en" data-bs-theme="@Context.Request?.Cookies?["Theme"]">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - VideoStreamingService</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>

    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/VideoStreamingService.styles.css" asp-append-version="true"/>
</head>
<body>
<header>
    <nav class="navbar navbar-expand-md border-bottom box-shadow mb-3 fixed-top bg-body" id="header">
        <div class="container-fluid d-flex">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">VideoStreamingService</a>
            <button class="navbar-toggler me-auto px-2" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse" id="navbarNav">
                <ul class="navbar-nav flex-grow-1">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Subscriptions">Подписки</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Library">Библиотека</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Home" asp-action="History">История</a>
                        </li>
                    }
                </ul>
            <div class="input-group mx-auto align-self-center mt-3 mt-sm-2 mb-3 mx-md-4 my-md-0 flex-nowrap">
                        <input type="text" id="searchInput" class="form-control border-secondary" placeholder="Поиск"
                               value="@(TempData?["SearchString"] != null ? TempData?["SearchString"] : "")" aria-describedby="searchBuutton2">
                        <button class="btn btn-outline-secondary ps-2 pe-2" onclick="searchClick()" id="searchButton">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-search" viewBox="0 0 16 20">
                              <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/>
                            </svg>
                        </button>
                    </div>
            </div>
            <partial name="_Identity.cshtml"/>
        </div>
    </nav>
</header>
<div class="container-fluid position-relative">
    <main id="main" role="main" class="pb-3 mt-5 pt-2">
        @RenderBody()
        @if (TempData["Error"] != null)
        {
            @await Html.PartialAsync("_Alert", TempData["Error"])
        }
    </main>
</div>

<footer class="border-top footer text-muted">
    <div class="container">
        &copy; 2023 - VideoStreamingService - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
    </div>
</footer>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script src="~/js/filedrop.js"></script>
<script type="text/javascript">
        // Сообщение об ошибке
        function showError(message){
            $.get("/Home/GetAlert/" + message, function (res) {
                $('#main').append(res)
            });
        }
    
        // Поиск
        $(document).ready(function () {
            $("#searchInput").keypress(function (event) {
                if (event.which == 13) {
                        searchClick();
                    }
                });
            });
        function searchClick() {
            if ($("#searchInput").val().replace(/\s/g, '') != ""){
                window.location = "/Home/Search?searchString=" + $("#searchInput").val();
            }
        }
        // Подсказки
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
        // Авторазмер у многострочного поля
	    var tx;
        refreshTextareaInput();

        function refreshTextareaInput(){
            tx = document.getElementsByTagName("textarea");
            for (let i = 0; i < tx.length; i++) {
                tx[i].style.height = 0;
                tx[i].style.height = (tx[i].scrollHeight) + "px";
                tx[i].style.overflow = "hidden";
                tx[i].addEventListener("input", OnInput, false);
            }
        }

	    function OnInput() {
		    this.style.height = 0;
		    this.style.height = (this.scrollHeight) + "px";
	    }

        // Наведение у всех картинок
        var imgs;
        refreshPrevOver();

        function refreshPrevOver(){
            imgs = document.getElementsByTagName("img");
            for (let i = 0; i < imgs.length; i++) {
                if (imgs[i].classList.contains('preview')){
                    imgs[i].onmouseover = prevOver;
                    imgs[i].onmouseout = prevOut;
                }
            }
        }

        // $.ajax({
        // 	type: "POST",
        //     url: '/User/GetUserName',
        // 	contentType: false,
        //     success: function (ex) {
        //         if (ex != null){
        //             document.getElementById("userButton").textContent = ex;
        //         }
        //     }
        // });

        let funcId = 0;

        async function prevOver(event) {
            var target = event.currentTarget;
            var id = funcId = Date.now();
            if (target.getAttribute("data-src") == null && !target.src.includes("thumbnail")) {
                target.setAttribute("data-src", target.src);
                for (let i = 0; i<3; i++){
                    if (target.getAttribute("data-src") != null && funcId == id) {
                        var source = target.getAttribute("data-src").slice(0, target.getAttribute("data-src").lastIndexOf('/'))+"/"+i+".jpg";
                        target.setAttribute("src", source);
                        await sleep(800);
                        if(i==2)
                            i=-1
                    }
                    else break;
                }
            }
        }

        function prevOut(event) {
            var target = event.currentTarget;
            if (target.getAttribute("data-src")!=null){
                target.setAttribute("src", target.getAttribute("data-src"));
                target.removeAttribute("data-src");
            }
            funcId = 0;
        }

        function sleep(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }
    </script>
@await RenderSectionAsync("Scripts", required: false)
</body>
</html>