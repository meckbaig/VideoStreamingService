@using VideoStreamingService.Data.ViewModels;
@model SearchVM;

@foreach (var searchElement in Model.SearchElements)
{
	@if (searchElement.GetType() == typeof(UserChannel))
	{
		UserChannel c = searchElement as UserChannel;
		<div id="container_@c.Id" class="rounded mb-3 w-75 mx-auto">
			<div class="d-flex align-items-center">
				<a href="~/@c.Url">
					<img src="data:image/jpeg;base64,@c.Image" class="rounded-circle p-0 my-0 me-3 me-md-4"
						 style="aspect-ratio: 1/1;max-height:128px;max-width:128px">
				</a>
				<div>
					<a class="h4 text-decoration-none crop-text-1 text-reset" href="~/@c.Url">@c.Name</a>
					@if (!c.OwnChanel)
					{
						<button channelUrl="@c.Url" subed="@c.Subed.ToString().ToLower()"
							class="btn btn-success sub-btn mb-2" style="width:190px;">
							Подписаться
						</button>
					}
					<p id="subCount_@c.Url" class="mb-2" title="@c.LongSubsString()">@c.SubsString()</p>
				</div>
			</div>
		</div>
	}
	else if (searchElement.GetType() == typeof(FormattedVideo))
	{
		FormattedVideo formattedVideo = searchElement as FormattedVideo;
		@await Html.PartialAsync("_VideoHorizontal", formattedVideo)
	}
}